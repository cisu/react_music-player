[{"C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\index.js":"1","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\reportWebVitals.js":"2","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\App.js":"3","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\components\\Player.jsx":"4","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\components\\Song.jsx":"5","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\util.js":"6","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\data.js":"7","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\components\\Library.jsx":"8","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\components\\LibrarySong.jsx":"9","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\components\\Nav.jsx":"10"},{"size":478,"mtime":1610367144113,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1606755501093,"results":"13","hashOfConfig":"12"},{"size":2432,"mtime":1610547525816,"results":"14","hashOfConfig":"12"},{"size":3460,"mtime":1610547186622,"results":"15","hashOfConfig":"12"},{"size":313,"mtime":1610394531492,"results":"16","hashOfConfig":"12"},{"size":316,"mtime":1610389886538,"results":"17","hashOfConfig":"12"},{"size":2217,"mtime":1610390044987,"results":"18","hashOfConfig":"12"},{"size":792,"mtime":1610528476220,"results":"19","hashOfConfig":"12"},{"size":1064,"mtime":1610547132586,"results":"20","hashOfConfig":"12"},{"size":442,"mtime":1610528218082,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"6pnsot",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\index.js",[],["47","48"],"C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\reportWebVitals.js",[],"C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\App.js",["49"],"C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\components\\Player.jsx",["50"],"import React, {useEffect} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n// import {playAudio} from '../util';\r\n\r\nconst Player = ({\r\n  audioRef,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  currentSong,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  // UseEffect\r\n  useEffect(() => {\r\n    // Add Active State\r\n    const newSongs = songs.map(song => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  // Event Handlers\r\n  const playSongHandler = () => {\r\n    // Pause or Play\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = time => {\r\n    return (\r\n      Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragHandler = e => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({...songInfo, currentTime: e.target.value});\r\n  };\r\n\r\n  const skipTrackHandler = async direction => {\r\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\r\n    if (direction === 'skip-forward') {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === 'skip-back') {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        // playAudio(isPlaying, audioRef);\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    // playAudio(isPlaying, audioRef);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  // Add the styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className='player'>\r\n      <div className='time-control'>\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className='track'\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type='range'\r\n          />\r\n          <div style={trackAnim} className='animate-track'></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\r\n      </div>\r\n      <div className='play-control'>\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler('skip-back')}\r\n          className='skip-back'\r\n          size='2x'\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className='play'\r\n          size='2x'\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler('skip-forward')}\r\n          className='skip-froward'\r\n          size='2x'\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\components\\Song.jsx",["51"],"import React from 'react';\r\n\r\nconst Song = ({currentSong}) => {\r\n  return (\r\n    <div className='song-container'>\r\n      <img alt={currentSong.name} src={currentSong.cover} alt='cover album' />\r\n      <h1>{currentSong.name}</h1>\r\n      <h1>{currentSong.artist}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\util.js",[],"C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\data.js",[],"C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\components\\Library.jsx",["52"],"import {library} from '@fortawesome/fontawesome-svg-core';\r\nimport React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n      <h2>Library</h2>\r\n      <div className='library-songs'>\r\n        {songs.map(song => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\components\\LibrarySong.jsx",["53"],"import React from 'react';\r\n// import {playAudio} from '../util';\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  id,\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n    // audioRef.current.play();\r\n\r\n    // Add Active State\r\n    const newSongs = songs.map(song => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n\r\n    // Check if the song is playing\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? 'selected' : ''}`}\r\n    >\r\n      <img alt={song.name} src={song.cover} alt='cover album' />\r\n      <div className='song-description'>\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","C:\\Users\\cisu\\Desktop\\projects\\react\\dev-ed\\music-player\\src\\components\\Nav.jsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":12,"column":9,"nodeType":"60","messageId":"61","endLine":12,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":39,"column":6,"nodeType":"64","endLine":39,"endColumn":19,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":6,"column":59,"nodeType":"68","endLine":6,"endColumn":76},{"ruleId":"58","severity":1,"message":"69","line":1,"column":9,"nodeType":"60","messageId":"61","endLine":1,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":42,"column":45,"nodeType":"68","endLine":42,"endColumn":62},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'playAudio' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["72"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'library' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"75","text":"76"},[777,790],"[currentSong, setSongs, songs]"]